<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booy.ssm.exam.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.booy.ssm.exam.pojo.Student">
    <id column="stuId" jdbcType="INTEGER" property="stuId" />
    <result column="stumajor" jdbcType="VARCHAR" property="stumajor" />
    <result column="stuName" jdbcType="VARCHAR" property="stuname" />
    <result column="stuSex" jdbcType="VARCHAR" property="stusex" />
    <result column="stuAge" jdbcType="INTEGER" property="stuage" />
    <result column="stuAdress" jdbcType="VARCHAR" property="stuadress" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stuId, stumajor, stuName, stuSex, stuAge, stuAdress, phone, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stuId = #{stuId,jdbcType=INTEGER}
  </select>
  <select id="getStudentList" parameterType="com.booy.ssm.exam.pojo.Student" resultType="com.booy.ssm.exam.pojo.Student">
    select *
    from student
    <where>
      <if test="stuId !=null and stuId!=''">and stuId like concat('%',#{stuId},'%')</if>
      <if test="stuname !=null and stuname!=''">
        <bind name="temp" value="'%'+stuname+'%'"/>
        and stuname like #{temp}
      </if>
    </where>
  </select>
  <!--<select id="selectByAccount" parameterType="java.lang.String" resultType="com.booy.ssm.exam.pojo.Student">
    select * from
  </select>-->
  <select id="getStudentByAccount" parameterType="java.lang.Integer" resultType="com.booy.ssm.exam.pojo.StudentLogin">
    select * from student_login where stuId = #{stuId}
  </select>
  <select id="getStudentList2" parameterType="com.booy.ssm.exam.pojo.Student" resultType="com.booy.ssm.exam.pojo.Student">
    select *
    from student
    <where>
      <if test="stuId !=null and stuId!=''">and stuId like concat('%',#{stuId},'%')</if>
      <if test="stuname !=null and stuname!=''">
        <bind name="temp" value="'%'+stuname+'%'"/>
        and stuname like #{temp}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where stuId = #{stuId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.booy.ssm.exam.pojo.Student">
    insert into student (stuId, stumajor, stuName, 
      stuSex, stuAge, stuAdress, 
      phone, status)
    values (#{stuId,jdbcType=INTEGER}, #{stumajor,jdbcType=VARCHAR}, #{stuname,jdbcType=VARCHAR},
      #{stusex,jdbcType=VARCHAR}, #{stuage,jdbcType=INTEGER}, #{stuadress,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booy.ssm.exam.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stuId,
      </if>
      <if test="stumajor != null">
        stumajor,
      </if>
      <if test="stuname != null">
        stuName,
      </if>
      <if test="stusex != null">
        stuSex,
      </if>
      <if test="stuage != null">
        stuAge,
      </if>
      <if test="stuadress != null">
        stuAdress,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stumajor != null">
        #{stumajor,jdbcType=VARCHAR},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stusex != null">
        #{stusex,jdbcType=VARCHAR},
      </if>
      <if test="stuage != null">
        #{stuage,jdbcType=INTEGER},
      </if>
      <if test="stuadress != null">
        #{stuadress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertStudentLogin" parameterType="com.booy.ssm.exam.pojo.StudentLogin">
    insert into student_login (stuId,stuname,password,flag,salt)
    values
    (#{stuId,jdbcType=INTEGER},#{stuname,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{flag,jdbcType=INTEGER},#{salt,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.booy.ssm.exam.pojo.Student">
    update student
    <set>
      <if test="stumajor != null">
        stumajor = #{stumajor,jdbcType=VARCHAR},
      </if>
      <if test="stuname != null">
        stuName = #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stusex != null">
        stuSex = #{stusex,jdbcType=VARCHAR},
      </if>
      <if test="stuage != null">
        stuAge = #{stuage,jdbcType=INTEGER},
      </if>
      <if test="stuadress != null">
        stuAdress = #{stuadress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where stuId = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booy.ssm.exam.pojo.Student">
    update student
    set stumajor = #{stumajor,jdbcType=VARCHAR},
      stuName = #{stuname,jdbcType=VARCHAR},
      stuSex = #{stusex,jdbcType=VARCHAR},
      stuAge = #{stuage,jdbcType=INTEGER},
      stuAdress = #{stuadress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where stuId = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>